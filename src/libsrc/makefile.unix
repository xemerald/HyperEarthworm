# The single-threaded libew is no longer used; everything uses the multi-threaded libew_mt now

L = $(EW_HOME)/$(EW_VERSION)/lib

COMMON_MODULES   = \
	libcrypto \
	libdali \
	qlib2_${EW_BITS} \
	util \

LINUX_MODULES    = unix
SPECIFIC_MODULES = $(COMMON_MODULES) $($(PLATFORM)_MODULES)

LINUX_DIR    = unix
SPECIFIC_DIR = $($(PLATFORM)_DIR)

LIBEW_COMMON_MODULES = \
	util/chron3.o \
	util/earthworm_defs.o \
	util/getutil.o \
	util/kom.o \
	$(SPECIFIC_DIR)/sleep_ew.o \
	$(SPECIFIC_DIR)/transport.o \
	$(SPECIFIC_DIR)/time_ew.o

#LIBEW_MODULES = \
#	$(LIBEW_COMMON_MODULES) \
#	util/logit.o

LIBEW_MT_MODULES = \
	$(LIBEW_COMMON_MODULES) \
	util/logit_mt.o \
	$(SPECIFIC_DIR)/sema_ew.o \
	$(SPECIFIC_DIR)/threads_ew.o

#all:	$(SPECIFIC_MODULES) \
#	libew \
#	libew_mt
all:	$(SPECIFIC_MODULES) \
	libew_mt

libcrypto \
libgd \
unix \
util: PHONY
	@cd $@ && \
		echo ---------- ; \
		echo Making $@ in: `pwd` ; \
		$(MAKE) -f makefile.unix

libdali: \
	libdali/lib \
	$L/libdali.a

libdali/lib: PHONY
	@cd libdali && \
		echo ---------- ; \
		echo Making libdali in: `pwd` ; \
		$(MAKE)

$L/libdali.a: libdali/libdali.a
		cp libdali/libdali.a $L/

#
# Override the macro definitions in the qlib2 Makefile that we provide
#

QLIB_32_BITS =
QLIB_64_BITS = 64
QLIB_BITS    = $(QLIB_$(EW_BITS)_BITS)

qlib2_32:: \
	qlib2/lib32

qlib2_64:: \
	qlib2/lib64

qlib2_32 \
qlib2_64:: \
	qlib2/lib_ew \
	qlib2/lib_ew/libqlib2.a \
	qlib2/lib_ew/libqlib2.debug.a \
	qlib2/lib_ew/libqlib2nl.a \
	qlib2/lib_ew/libqlib2nl.debug.a

qlib2/lib32: PHONY
	@cd qlib2 && \
		echo ---------- ; \
		echo Making qlib2 in: `pwd` ; \
		$(MAKE) CC="$(CC)" CFLAGS_SITE="$(CFLAGS)" CDBG="" C32="" all32

qlib2/lib64: PHONY
	@cd qlib2 && \
		echo ---------- ; \
		echo Making qlib2 in: `pwd` ; \
		$(MAKE) CC="$(CC)" CFLAGS_SITE="$(CFLAGS)" CDBG="" C64="" all64

qlib2/lib_ew:
		mkdir -p $@

qlib2/lib_ew/libqlib2.a:	qlib2/lib${QLIB_BITS}/libqlib2.a
		cp qlib2/lib${QLIB_BITS}/libqlib2.a $@

qlib2/lib_ew/libqlib2.debug.a:	qlib2/lib${QLIB_BITS}/libqlib2.debug.a
		cp qlib2/lib${QLIB_BITS}/libqlib2.debug.a $@

qlib2/lib_ew/libqlib2nl.a:	qlib2/lib${QLIB_BITS}/libqlib2nl.a
		cp qlib2/lib${QLIB_BITS}/libqlib2nl.a $@

qlib2/lib_ew/libqlib2nl.debug.a: qlib2/lib${QLIB_BITS}/libqlib2nl.debug.a
		cp qlib2/lib${QLIB_BITS}/libqlib2nl.debug.a $@

#libew: LIBEW_MESSAGE $L/libew.a

#LIBEW_MESSAGE: PHONY
#	@echo ----------
#	@echo Making libew in: `pwd`

#$L/libew.a: $(LIBEW_MODULES)
#	ar rvs $@ $(LIBEW_MODULES)
#	ranlib $@

libew_mt: LIBEW_MT_MESSAGE $L/libew_mt.a

LIBEW_MT_MESSAGE: PHONY
	@echo ----------
	@echo Making libew_mt in: `pwd`

$L/libew_mt.a: $(LIBEW_MT_MODULES)
	ar rvs $@ $(LIBEW_MT_MODULES)
	ranlib $@


# Clean-up rules
clean:	clean/here \
	clean/lib \
	clean/libcrypto \
	clean/libdali \
	clean/libgd \
	clean/qlib2 \
	clean/unix \
	clean/util

clean/here: PHONY
	-$(RM) libew*.a libew*.lib

clean/lib: PHONY
	-@cd $L && \
		echo Cleaning in: `pwd` ; \
		echo "$(RM) a.out core lib*.a lib*.lib *.o *.obj *% *~" ; \
		$(RM) a.out core lib*.a lib*.lib *.o *.obj *% *~

clean/libcrypto \
clean/libgd \
clean/unix \
clean/util: PHONY
	-@cd $(@F) && \
		echo Cleaning in: `pwd` ; \
		$(MAKE) -f makefile.unix clean

clean/libdali: PHONY
	-@cd libdali && \
		echo Cleaning in: `pwd` ; \
		$(MAKE) clean

clean/qlib2: PHONY
	-@cd qlib2 && \
		echo Cleaning in: `pwd` ; \
		$(MAKE) clean ; \
		echo "$(RM) lib_ew/*" ; \
		$(RM) lib_ew/*

clean_bin: \
	clean_bin/libgd

clean_bin/libgd: PHONY
	-@cd libgd && \
		echo Cleaning binaries in: `pwd` ; \
		$(MAKE) -f makefile.unix clean_bin

PHONY:
